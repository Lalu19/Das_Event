@using Microsoft.Extensions.Configuration;
@using Microsoft.AspNetCore.Http
@inject IConfiguration Configuration;

@{
    ViewBag.Title = "Das Event & Catering";
    string apiUrl = Configuration.GetValue<string>("WebAPIBaseUrl");
}

<div class="page-header">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="#"><i class="fe fe-home mr-1"></i> DigitalCatalog </a></li>
        <li class="breadcrumb-item active" aria-current="page">Dashboard</li>
    </ol>

</div>

<div class="row">
    <div class="col-xl-3 col-lg-6 col-md-12">
        <div class="card">
            <div class="card-body d-flex">
                <div class="card-order">
                    <h6 class="mb-2">DigitalCatalog Users</h6>
                    <h2 class="mb-1"><span class="number-font counter" id="totalUser"></span></h2>
                    <p class="text-muted fs-12 mb-0"></p>
                </div>
                <div class="ml-auto">
                    <span class="bg-primary-transparent icon-service text-primary"><i class="mdi mdi-account-multiple  fs-2"></i> </span>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-lg-6 col-md-12">
        <div class="card">
            <div class="card-body d-flex">
                <div class="card-order">
                    <h6 class="mb-2">Active users</h6>
                    <h2 class="mb-1"><span class="number-font counter" id="activeUser"></span></h2>
                    <p class="text-muted fs-12 mb-0"></p>
                </div>
                <div class="ml-auto">
                    <span class="bg-primary-transparent icon-service text-primary"><i class="mdi mdi-account-multiple  fs-2"></i> </span>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-lg-6 col-md-12">
        <div class="card">
            <div class="card-body d-flex">
                <div class="card-order">
                    <h6 class="mb-2">In-Active users</h6>
                    <h2 class="mb-1"><span class="number-font counter" id="inActiveUser"></span></h2>
                    <p class="text-muted fs-12 mb-0"></p>
                </div>
                <div class="ml-auto">
                    <span class="bg-primary-transparent icon-service text-primary"><i class="mdi mdi-account-multiple  fs-2"></i> </span>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-lg-6 col-md-12">
        <div class="card">
            <div class="card-body d-flex">
                <div class="card-order">
                    <h6 class="mb-2">Admin users</h6>
                    <h2 class="mb-1"><span class="number-font counter" id="adminUser"></span></h2>
                    <p class="text-muted fs-12 mb-0"></p>
                </div>
                <div class="ml-auto">
                    <span class="bg-primary-transparent icon-service text-primary"><i class="mdi mdi-account-multiple  fs-2"></i> </span>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-lg-6 col-md-12">
        <div class="card">
            <div class="card-body d-flex">
                <div class="card-order">
                    <h6 class="mb-2">
                        Total Catalog
                    </h6>
                    <h2 class="mb-1"><span class="number-font counter" id="TotalCatalog"></span></h2>
                    <p class="text-muted fs-12 mb-0"></p>
                </div>
                <div class="ml-auto">
                    <a href="~/DigitalCatalogController1/ViewDigitalCatalog" class="bg-primary-transparent icon-service text-primary">
                        <i class="mdi mdi-account-multiple fs-2"></i>
                    </a>
                </div>
            </div>
        </div>
    </div>

</div>

@section scripts {

    <script>
        SuperTotalCatalog()
        function SuperTotalCatalog() {
            $.ajax({
                url: "@apiUrl/api/DigitalCatalog/GetDigitalCatalogList",
                type: "GET",
                success: function (data) {
                    //console.log(data);
                    var x = '';
                    var recordsTotal = data.recordsTotal;
                    x = x + '<h2>' + recordsTotal + '</h2>';
                    $('#TotalCatalog').html(x);
                },
                error: function (err) {
                    console.log(err);
                }
            });
        }
    </script>

    <script>
        var dateChartData = null, pieChartData = null, monthChartData = null, yearChartData = null;
        $(function () {
            if ('@Context.Session.GetString("RoleName")' == 'Admin') {
                $('#userStatus').show();
                loadUserStatus();
            }
            loadDateChart();
            loadPieChart();
            loadMonthChart();
            loadYearChart();

            new Chart($('#dateChart'), {
                type: 'line',
                data: {
                    labels: dateChartData.map(x => x.date),
                    datasets: [
                        {
                            label: 'Date wise Login',
                            backgroundColor: '#42a8ab',
                            data: dateChartData.map(x => x.count)
                        }
                    ]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false
                }
            });

            new Chart($('#pieChart'), {
                type: 'pie',
                data: {
                    labels: pieChartData.map(x => x.roleName),
                    datasets: [
                        {
                            backgroundColor: '#42a8ab',
                            data: pieChartData.map(x => x.count)
                        }
                    ]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false
                }
            });

            new Chart($('#monthChart'), {
                type: 'bar',
                data: {
                    labels: monthChartData.map(x => x.month),
                    datasets: [
                        {
                            label: 'Month wise Login',
                            backgroundColor: '#42a8ab',
                            data: monthChartData.map(x => x.count)
                        }
                    ]
                },
                options: {
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }]
                    }
                }
            });

            new Chart($('#yearChart'), {
                type: 'bar',
                data: {
                    labels: yearChartData.map(x => x.year),
                    datasets: [
                        {
                            label: 'Year wise Login',
                            backgroundColor: '#42a8ab',
                            data: yearChartData.map(x => x.count)
                        }
                    ]
                },
                options: {
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }]
                    }
                }
            });
        });

        function loadDateChart() {
            $.ajax({
                type: "GET",
                url: "@apiUrl/api/Users/GetLogInSummaryByDate/@Context.Session.GetInt32("UserId")",
                contentType: "application/json; charset=utf-8",
                headers: {
                    "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                },
                dataType: "json",
                async: false,
                success: function (data) {
                    //console.log(data)
                    dateChartData = data;
                },
                error: function (data) {
                    if (data.status == 401) {
                        window.location.replace('/Message/TokenExpire');
                    } else if (data.status == 403) {
                        window.location.replace('/Message/Unauthorize');
                    }
                }
            });
        }
        function loadPieChart() {
            $.ajax({
                type: "GET",
                url: "@apiUrl/api/Users/GetRoleWiseUser",
                contentType: "application/json; charset=utf-8",
                headers: {
                    "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                },
                dataType: "json",
                async: false,
                success: function (data) {
                    //console.log(data)
                    pieChartData = data;
                },
                error: function (data) {
                    if (data.status == 401) {
                        window.location.replace('/Message/TokenExpire');
                    } else if (data.status == 403) {
                        window.location.replace('/Message/Unauthorize');
                    }
                }
            });
        }
        function loadMonthChart() {
            $.ajax({
                type: "GET",
                url: "@apiUrl/api/Users/GetLogInSummaryByMonth/@Context.Session.GetInt32("UserId")",
                contentType: "application/json; charset=utf-8",
                headers: {
                    "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                },
                dataType: "json",
                async: false,
                success: function (data) {
                    //console.log(data)
                    monthChartData = data;
                },
                error: function (data) {
                    if (data.status == 401) {
                        window.location.replace('/Message/TokenExpire');
                    } else if (data.status == 403) {
                        window.location.replace('/Message/Unauthorize');
                    }
                }
            });
        }
        function loadYearChart() {
            $.ajax({
                type: "GET",
                url: "@apiUrl/api/Users/GetLogInSummaryByYear/@Context.Session.GetInt32("UserId")",
                contentType: "application/json; charset=utf-8",
                headers: {
                    "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                },
                dataType: "json",
                async: false,
                success: function (data) {
                    //console.log(data)
                    yearChartData = data;
                },
                error: function (data) {
                    if (data.status == 401) {
                        window.location.replace('/Message/TokenExpire');
                    } else if (data.status == 403) {
                        window.location.replace('/Message/Unauthorize');
                    }
                }
            });
        }

        function loadUserStatus() {
            $.ajax({
                type: "GET",
                url: "@apiUrl/api/Users/UserStatus",
                contentType: "application/json; charset=utf-8",
                headers: {
                    "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                },
                dataType: "json",
                success: function (data) {
                    if (data) {
                        $('#totalUser').text(data.totalUser);
                        $('#activeUser').text(data.activeUser);
                        $('#inActiveUser').text(data.inActiveUser);
                        $('#adminUser').text(data.adminUser);
                        // $('#TotalCatalog').text(data.adminUser);
                    } else {
                        sweetAlert("Validation Alert!", "Something unexpected!", "warning");
                    }
                },
                error: function (data) {
                    if (data.status == 401) {
                        window.location.replace('/Message/TokenExpire');
                    } else if (data.status == 403) {
                        window.location.replace('/Message/Unauthorize');
                    }
                }
            });
        }

        loadCareer()
        function loadCareer() {
            var table = $('#carrerTBL').DataTable();
            table.destroy();
            table = $('#carrerTBL').dataTable({
                "paginationType": "full_numbers",
                "dom": 'Bfrtip',
                "buttons": ['copy', 'csv', 'excel', 'pdf', 'print'],
                "searching": true,
                "paging": true,
                "sort": true,
                "info": true,
                "ajax": {
                    "url": '@apiUrl/api/CareerPage/GetCareerPageList',
                    "type": "GET",
                    "dataType": "json",
                    "headers": {
                        "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                    },
                    "error": function (data) {
                        if (data.status == 401) {
                            window.location.replace('/Message/TokenExpire');
                        } else if (data.status == 403) {
                            window.location.replace('/Message/Unauthorize');
                        }
                    }
                },

                "order": [],
                "columns": [
                    { "data": "jobPositionName", "orderable": true },
                    { "data": "jobType", "orderable": true },
                    { "data": "industry", "orderable": true },
                    { "data": "city", "orderable": true },
                    { "data": "name", "orderable": true },
                    { "data": "experienceinYears", "orderable": true },
                    { "data": "phone", "orderable": true },
                    { "data": "email", "orderable": true },
                    {
                        "data": "createdOn",
                        "orderable": true,
                        "render": function (data, type, row) {
                            return row.createdOn != null ? row.createdOn.substring(0, 10) : '';
                        }
                    },
                    {
                        "render": function (data, type, row) {

                            if (row.status === 'Applyed') {
                                return '<p class="tag tag-red">' + row.status + '</p>';
                            }
                            else if (row.status === 'Applyed') {
                                return '<p class="tag tag-purple">' + row.status + '</p>';
                            }


                        }
                    },

                ]
            });
        }
    </script>

}